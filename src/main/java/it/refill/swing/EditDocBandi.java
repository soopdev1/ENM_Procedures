/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.refill.swing;

import it.refill.exe.Constant;
import static it.refill.exe.Constant.preparefileforupload;
import it.refill.exe.Db_Bando;
import it.refill.exe.DeD_Engine;
import it.refill.exe.Neet_Engine;
import java.io.File;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author rcosco
 */
public class EditDocBandi extends javax.swing.JFrame {

    /**
     * Creates new form EditDocBandi
     */
    @SuppressWarnings("unchecked")
    public EditDocBandi() {
        initComponents();
        this.setLocation((int) ((this.getGraphicsConfiguration().getBounds().getWidth() - this.getWidth()) / 2),
                (int) ((this.getGraphicsConfiguration().getBounds().getHeight() - this.getHeight()) / 2));
        this.BANDO.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"SELEZIONA BANDO",
            "NEET",
            "DONNE E DISOCCUPATI"}));
        this.DOCUMENTO.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"SELEZIONA DOCUMENTO",
            "DONLA - ALLEGATO A - DOMANDA DI PARTECIPAZIONE",
            "DONLB - ALLEGATO B - DICHIARAZIONE DI IMPEGNO",
            "DONLD - ALLEGATO D - RICHIESTA DI AUTORIZZAZIONE A SVOLGERE PERCORSI",
            "CONV - ALLEGATO C - MODELLO DI CONVENZIONE TRA ENTE NAZIONALE MICROCREDITO E SOGGETTO ATTUATORE",
            "MOD1 - ALLEGATO C.1 - MODELLO DI PERCORSO FORMATIVO",
            "MOD2 - ALLEGATO C.2 - DICHIARAZIONE SOSTITUTIVA TRACCIABILITA'"}));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        DOCUMENTO = new javax.swing.JComboBox<>();
        BANDO = new javax.swing.JComboBox<>();
        PATH = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        USERNAME = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("SOSTITUISCI DOC BANDO");

        jLabel2.setText("FILE PATH");

        jButton1.setText("SALVA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("USERNAME");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DOCUMENTO, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BANDO, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PATH)
                    .addComponent(USERNAME)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jLabel3)))
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BANDO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DOCUMENTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PATH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String nomebando = this.BANDO.getSelectedItem().toString();
        String nomedoc = this.DOCUMENTO.getSelectedItem().toString().split(" - ")[0].trim();
        String path = this.PATH.getText().trim();
        String username = this.USERNAME.getText().trim();

        if (nomebando.equalsIgnoreCase("SELEZIONA BANDO") || nomedoc.equalsIgnoreCase("SELEZIONA DOCUMENTO") || path.equals("") || username.equals("")) {
            JOptionPane.showMessageDialog(null, "COMPILARE TUTTI I CAMPI", "Errore", JOptionPane.ERROR_MESSAGE);
            return;
        } else {

            String table = "";
            if (nomedoc.equals("DONLA") || nomedoc.equals("DONLB") || nomedoc.equals("DONLD")) {
                table = "docuserbandi";
            } else if (nomedoc.equals("CONV") || nomedoc.equals("MOD1") || nomedoc.equals("MOD2")) {
                table = "docuserconvenzioni";
            } else {
                JOptionPane.showMessageDialog(null, "DOCUMENTO NON TROVATO", "Errore", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String pathfinal = "";
            try {
                File filedasosti = new File(path);
                pathfinal = preparefileforupload(filedasosti);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, Constant.estraiEccezione(e), "Errore", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (pathfinal.equals("") || pathfinal.equals("FILE ERROR")) {
                JOptionPane.showMessageDialog(null, "FILE NON TROVATO", "Errore", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (nomebando.equals("NEET")) {
                Neet_Engine ne = new Neet_Engine(false);
                Db_Bando db1 = new Db_Bando(ne.host);
                try {
                    String update = "UPDATE " + table + " SET path = '" + pathfinal + "' WHERE username = '" + username + "' AND codicedoc = '" + nomedoc + "'";
                    try (Statement st = db1.getConnection().createStatement()) {
                        boolean es = st.executeUpdate(update) > 0;
                        if (es) {
                            JOptionPane.showMessageDialog(null, "DOCUMENTO SOSTITUITO CON SUCCESSO", "OPERAZIONE COMPLETATA", JOptionPane.PLAIN_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "RIGA DB NON TROVATA", "Errore", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, Constant.estraiEccezione(e), "Errore", JOptionPane.ERROR_MESSAGE);
                }
                db1.closeDB();
            } else if (nomebando.startsWith("DONNE")) {
                DeD_Engine de = new DeD_Engine(false);
                Db_Bando db1 = new Db_Bando(de.host);
                try {
                    String update = "UPDATE " + table + " SET path = '" + pathfinal + "' WHERE username = '" + username + "' AND codicedoc = '" + nomedoc + "'";
                    try (Statement st = db1.getConnection().createStatement()) {
                        boolean es = st.executeUpdate(update) > 0;
                        if (es) {
                            JOptionPane.showMessageDialog(null, "DOCUMENTO SOSTITUITO CON SUCCESSO", "OPERAZIONE COMPLETATA", JOptionPane.PLAIN_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "RIGA DB NON TROVATA", "Errore", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, Constant.estraiEccezione(e), "Errore", JOptionPane.ERROR_MESSAGE);
                }
                db1.closeDB();
            } else {
                JOptionPane.showMessageDialog(null, "COMPILARE TUTTI I CAMPI", "Errore", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditDocBandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditDocBandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditDocBandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditDocBandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditDocBandi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BANDO;
    private javax.swing.JComboBox<String> DOCUMENTO;
    private javax.swing.JTextField PATH;
    private javax.swing.JTextField USERNAME;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
